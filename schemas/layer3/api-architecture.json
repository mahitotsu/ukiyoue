{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ukiyoue.example.org/schemas/layer3/api-architecture.json",
  "title": "API Architecture",
  "description": "API アーキテクチャ（ARCH-API）: API 設計原則、パターン、戦略を定義",
  "allOf": [{ "$ref": "../_common.json#/definitions/baseArtifact" }],
  "type": "object",
  "required": ["title", "overview", "designPrinciples"],
  "properties": {
    "@type": {
      "const": "ApiArchitecture"
    },
    "title": {
      "type": "string",
      "description": "API アーキテクチャのタイトル",
      "minLength": 1
    },
    "overview": {
      "type": "string",
      "description": "API 全体の概要と設計方針"
    },
    "designPrinciples": {
      "type": "array",
      "description": "API 設計原則（RESTful、GraphQL、gRPC等）",
      "items": {
        "type": "object",
        "required": ["name", "description"],
        "properties": {
          "name": {
            "type": "string",
            "description": "原則名（例: RESTful Resource Design, HATEOAS）"
          },
          "description": {
            "type": "string",
            "description": "原則の詳細説明"
          },
          "rationale": {
            "type": "string",
            "description": "この原則を採用する理由"
          }
        }
      },
      "minItems": 1
    },
    "apiStyle": {
      "type": "string",
      "description": "API スタイル（REST、GraphQL、gRPC、WebSocket等）",
      "enum": ["REST", "GraphQL", "gRPC", "WebSocket", "Hybrid"]
    },
    "versioningStrategy": {
      "type": "object",
      "description": "API バージョニング戦略",
      "properties": {
        "approach": {
          "type": "string",
          "description": "バージョニング方式（URL path、Header、Query parameter等）",
          "enum": ["URL Path", "Header", "Query Parameter", "Content Negotiation"]
        },
        "policy": {
          "type": "string",
          "description": "バージョン管理ポリシー（後方互換性、非推奨化プロセス等）"
        },
        "deprecationProcess": {
          "type": "string",
          "description": "API 非推奨化・廃止プロセス"
        }
      }
    },
    "authenticationStrategy": {
      "type": "object",
      "description": "認証・認可戦略",
      "properties": {
        "mechanisms": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "認証メカニズム（OAuth2、JWT、API Key等）"
          }
        },
        "authorizationModel": {
          "type": "string",
          "description": "認可モデル（RBAC、ABAC、スコープベース等）"
        },
        "securityConsiderations": {
          "type": "string",
          "description": "セキュリティ上の考慮事項"
        }
      }
    },
    "errorHandlingStrategy": {
      "type": "object",
      "description": "エラーハンドリング戦略",
      "properties": {
        "errorFormat": {
          "type": "string",
          "description": "エラーレスポンスフォーマット（RFC 7807 Problem Details、カスタム等）"
        },
        "statusCodeStrategy": {
          "type": "string",
          "description": "HTTP ステータスコード使用戦略"
        },
        "errorCategories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "category": { "type": "string", "description": "エラーカテゴリ" },
              "httpStatus": { "type": "integer", "description": "対応する HTTP ステータスコード" },
              "description": { "type": "string" }
            }
          }
        }
      }
    },
    "rateLimitingStrategy": {
      "type": "object",
      "description": "レート制限戦略",
      "properties": {
        "approach": {
          "type": "string",
          "description": "レート制限方式（Token Bucket、Leaky Bucket等）"
        },
        "limits": {
          "type": "string",
          "description": "制限値の設定方針（ユーザー別、エンドポイント別等）"
        },
        "headers": {
          "type": "array",
          "items": { "type": "string" },
          "description": "レート制限情報を通知するヘッダー（X-RateLimit-*等）"
        }
      }
    },
    "pagination": {
      "type": "object",
      "description": "ページネーション戦略",
      "properties": {
        "approach": {
          "type": "string",
          "description": "ページネーション方式（Offset-based、Cursor-based等）",
          "enum": ["Offset-based", "Cursor-based", "Page-based", "Link Header"]
        },
        "parameters": {
          "type": "array",
          "items": { "type": "string" },
          "description": "ページネーションパラメータ（limit、offset、cursor等）"
        }
      }
    },
    "filtering": {
      "type": "object",
      "description": "フィルタリング・ソート戦略",
      "properties": {
        "filteringApproach": {
          "type": "string",
          "description": "フィルタリング方式（Query parameter、GraphQL Where clause等）"
        },
        "sortingApproach": {
          "type": "string",
          "description": "ソート方式"
        }
      }
    },
    "contentNegotiation": {
      "type": "object",
      "description": "コンテンツネゴシエーション戦略",
      "properties": {
        "supportedFormats": {
          "type": "array",
          "items": { "type": "string" },
          "description": "サポートするフォーマット（JSON、XML、Protobuf等）"
        },
        "defaultFormat": {
          "type": "string",
          "description": "デフォルトフォーマット"
        }
      }
    },
    "apiGatewayStrategy": {
      "type": "object",
      "description": "API ゲートウェイ戦略",
      "properties": {
        "use": {
          "type": "boolean",
          "description": "API ゲートウェイを使用するか"
        },
        "responsibilities": {
          "type": "array",
          "items": { "type": "string" },
          "description": "API ゲートウェイの責務（認証、ルーティング、レート制限等）"
        },
        "technology": {
          "type": "string",
          "description": "使用する API ゲートウェイ技術"
        }
      }
    },
    "documentation": {
      "type": "object",
      "description": "API ドキュメント戦略",
      "properties": {
        "format": {
          "type": "string",
          "description": "ドキュメントフォーマット（OpenAPI、AsyncAPI等）"
        },
        "interactiveDocumentation": {
          "type": "boolean",
          "description": "インタラクティブドキュメント（Swagger UI等）を提供するか"
        },
        "sdkGeneration": {
          "type": "boolean",
          "description": "SDK 自動生成を行うか"
        }
      }
    },
    "caching": {
      "type": "object",
      "description": "キャッシング戦略",
      "properties": {
        "approach": {
          "type": "string",
          "description": "キャッシング方式（HTTP Cache-Control、ETag、CDN等）"
        },
        "policy": {
          "type": "string",
          "description": "キャッシュポリシー"
        }
      }
    },
    "monitoring": {
      "type": "object",
      "description": "API 監視戦略",
      "properties": {
        "metrics": {
          "type": "array",
          "items": { "type": "string" },
          "description": "監視メトリクス（レスポンスタイム、エラー率、スループット等）"
        },
        "logging": {
          "type": "string",
          "description": "ログ戦略"
        },
        "tracing": {
          "type": "string",
          "description": "分散トレーシング戦略"
        }
      }
    },
    "testingStrategy": {
      "type": "object",
      "description": "API テスト戦略",
      "properties": {
        "contractTesting": {
          "type": "boolean",
          "description": "コントラクトテストを実施するか"
        },
        "mockServer": {
          "type": "boolean",
          "description": "モックサーバーを使用するか"
        },
        "loadTesting": {
          "type": "string",
          "description": "負荷テスト戦略"
        }
      }
    },
    "crossCuttingConcerns": {
      "type": "object",
      "description": "横断的関心事",
      "properties": {
        "cors": {
          "type": "string",
          "description": "CORS（Cross-Origin Resource Sharing）ポリシー"
        },
        "compression": {
          "type": "boolean",
          "description": "レスポンス圧縮を使用するか"
        },
        "encryption": {
          "type": "string",
          "description": "暗号化戦略（TLS、フィールドレベル暗号化等）"
        }
      }
    },
    "constraints": {
      "type": "array",
      "description": "API 設計制約",
      "items": {
        "type": "object",
        "required": ["description"],
        "properties": {
          "description": { "type": "string" },
          "rationale": { "type": "string" }
        }
      }
    },
    "references": {
      "type": "array",
      "description": "参考資料",
      "items": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "url": { "type": "string", "format": "uri" }
        }
      }
    }
  }
}
