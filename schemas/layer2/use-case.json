{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ukiyoue.example.org/schemas/layer2/use-case.json",
  "title": "Use Case",
  "description": "ユースケース（UC）: アクターとシステムの相互作用を通じて価値を提供するシナリオ",
  "allOf": [{ "$ref": "../_common.json#/definitions/baseArtifact" }],
  "type": "object",
  "required": ["id", "name", "actors", "goal", "mainFlow"],
  "properties": {
    "@type": {
      "const": "UseCase"
    },
    "id": {
      "type": "string",
      "pattern": "^UC-[A-Z]+-[0-9]{3}$",
      "description": "ユースケースID（例: UC-TOS-001）"
    },
    "name": {
      "type": "string",
      "description": "ユースケース名（例: Browse Menu, Place Order）",
      "minLength": 1
    },
    "goal": {
      "type": "string",
      "description": "このユースケースで達成したい目標・価値（アクターの視点）",
      "minLength": 1
    },
    "actors": {
      "type": "array",
      "description": "アクター（システムと相互作用するユーザーロール）",
      "items": {
        "type": "object",
        "required": ["name", "role"],
        "properties": {
          "name": {
            "type": "string",
            "description": "アクター名（例: Customer, Kitchen Staff）"
          },
          "role": {
            "type": "string",
            "enum": ["primary", "secondary", "system"],
            "description": "アクターの役割（primary: 主要, secondary: 補助, system: 外部システム）"
          },
          "description": {
            "type": "string",
            "description": "アクターの説明"
          }
        }
      },
      "minItems": 1
    },
    "scope": {
      "type": "string",
      "description": "スコープ（このユースケースが対象とするシステム境界）",
      "examples": ["Table Order System", "Payment Service", "Kitchen Display System"]
    },
    "level": {
      "type": "string",
      "enum": ["summary", "user-goal", "subfunction"],
      "description": "ユースケースレベル（summary: 概要, user-goal: ユーザー目標, subfunction: サブ機能）",
      "default": "user-goal"
    },
    "preconditions": {
      "type": "array",
      "description": "事前条件（このユースケースが実行される前に満たされるべき条件）",
      "items": {
        "type": "string"
      }
    },
    "triggers": {
      "type": "array",
      "description": "トリガー（ユースケースを開始するイベント）",
      "items": {
        "type": "string"
      }
    },
    "mainFlow": {
      "type": "array",
      "description": "メインフロー（正常系の基本シナリオ）",
      "items": {
        "type": "object",
        "required": ["step", "actor", "action"],
        "properties": {
          "step": {
            "type": "integer",
            "description": "ステップ番号",
            "minimum": 1
          },
          "actor": {
            "type": "string",
            "description": "アクション実行者（Actor名 または System）"
          },
          "action": {
            "type": "string",
            "description": "実行するアクション"
          },
          "systemBehavior": {
            "type": "string",
            "description": "システムの振る舞い・応答（Systemがアクターの場合）"
          },
          "data": {
            "type": "object",
            "description": "やり取りされるデータ",
            "properties": {
              "input": {
                "type": "array",
                "items": { "type": "string" },
                "description": "入力データ"
              },
              "output": {
                "type": "array",
                "items": { "type": "string" },
                "description": "出力データ"
              }
            }
          }
        }
      },
      "minItems": 1
    },
    "alternativeFlows": {
      "type": "array",
      "description": "代替フロー（正常系の別パターン）",
      "items": {
        "type": "object",
        "required": ["id", "name", "condition", "steps"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^ALT-[0-9]{2}$",
            "description": "代替フローID（例: ALT-01）"
          },
          "name": {
            "type": "string",
            "description": "代替フロー名"
          },
          "condition": {
            "type": "string",
            "description": "どの条件でこのフローが発動するか"
          },
          "branchFromStep": {
            "type": "integer",
            "description": "メインフローのどのステップから分岐するか",
            "minimum": 1
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["step", "actor", "action"],
              "properties": {
                "step": { "type": "string", "description": "ステップ番号（例: ALT-01.1）" },
                "actor": { "type": "string" },
                "action": { "type": "string" },
                "systemBehavior": { "type": "string" }
              }
            },
            "minItems": 1
          },
          "rejoinAtStep": {
            "type": "integer",
            "description": "メインフローのどのステップに戻るか（nullの場合は終了）"
          }
        }
      }
    },
    "exceptionFlows": {
      "type": "array",
      "description": "例外フロー（エラー処理、異常系）",
      "items": {
        "type": "object",
        "required": ["id", "name", "condition", "steps"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^EXC-[0-9]{2}$",
            "description": "例外フローID（例: EXC-01）"
          },
          "name": {
            "type": "string",
            "description": "例外フロー名"
          },
          "condition": {
            "type": "string",
            "description": "どの例外条件でこのフローが発動するか"
          },
          "triggerAtStep": {
            "type": "integer",
            "description": "メインフローのどのステップで発生するか",
            "minimum": 1
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["step", "actor", "action"],
              "properties": {
                "step": { "type": "string", "description": "ステップ番号（例: EXC-01.1）" },
                "actor": { "type": "string" },
                "action": { "type": "string" },
                "systemBehavior": { "type": "string" }
              }
            },
            "minItems": 1
          },
          "resolution": {
            "type": "string",
            "enum": ["retry", "abort", "fallback", "notify"],
            "description": "例外の解決方法"
          }
        }
      }
    },
    "postconditions": {
      "type": "object",
      "description": "事後条件",
      "properties": {
        "success": {
          "type": "array",
          "items": { "type": "string" },
          "description": "成功時の事後条件"
        },
        "failure": {
          "type": "array",
          "items": { "type": "string" },
          "description": "失敗時の事後条件"
        }
      }
    },
    "businessRules": {
      "type": "array",
      "description": "適用されるビジネスルール",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ビジネスルールID"
          },
          "description": {
            "type": "string",
            "description": "ルールの説明"
          }
        }
      }
    },
    "nonFunctionalRequirements": {
      "type": "object",
      "description": "このユースケースに関連する非機能要求",
      "properties": {
        "performance": {
          "type": "string",
          "description": "性能要求（例: レスポンスタイム3秒以内）"
        },
        "usability": {
          "type": "string",
          "description": "ユーザビリティ要求"
        },
        "security": {
          "type": "string",
          "description": "セキュリティ要求"
        }
      }
    },
    "extensions": {
      "type": "array",
      "description": "拡張ユースケース（このユースケースから派生する子ユースケース）",
      "items": {
        "type": "string",
        "pattern": "^UC-[A-Z]+-[0-9]{3}$",
        "description": "拡張ユースケースID"
      }
    },
    "includes": {
      "type": "array",
      "description": "インクルードするユースケース（この中で呼び出される共通ユースケース）",
      "items": {
        "type": "string",
        "pattern": "^UC-[A-Z]+-[0-9]{3}$",
        "description": "インクルードするユースケースID"
      }
    },
    "relatedUserStories": {
      "type": "array",
      "description": "関連するユーザーストーリー（Layer 1）",
      "items": {
        "type": "string",
        "pattern": "^US-[A-Z]+-[0-9]{3}$"
      }
    },
    "derivedFunctionalRequirements": {
      "type": "array",
      "description": "このユースケースから導出される機能要求（Layer 2）",
      "items": {
        "type": "string",
        "pattern": "^FR-[A-Z]+-[0-9]{3}$"
      }
    }
  }
}
