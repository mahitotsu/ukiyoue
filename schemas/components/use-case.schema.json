{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ukiyoue.dev/schemas/components/use-case.schema.json",
  "title": "Use Case Schema",
  "description": "Reusable schema component for use case definitions",
  "type": "object",
  "required": ["id", "title", "actor", "description", "mainFlow"],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique use case identifier",
      "pattern": "^UC-[A-Z0-9-]+$"
    },
    "title": {
      "type": "string",
      "description": "Use case title",
      "minLength": 1,
      "maxLength": 200
    },
    "actor": {
      "type": "string",
      "description": "Primary actor (stakeholder ID)",
      "pattern": "^SH-[A-Z0-9-]+$"
    },
    "description": {
      "type": "string",
      "description": "Brief description of the use case",
      "minLength": 1,
      "maxLength": 1000
    },
    "preconditions": {
      "type": "array",
      "description": "Conditions that must be true before execution. Can be textual descriptions or references to prerequisite use cases using $REF syntax.",
      "items": {
        "oneOf": [
          {
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "description": "Textual description of a precondition"
          },
          {
            "type": "object",
            "required": ["$REF"],
            "properties": {
              "$REF": {
                "type": "string",
                "pattern": "^UC-[A-Z0-9-]+$",
                "description": "Reference to a prerequisite use case ID"
              },
              "description": {
                "type": "string",
                "maxLength": 200,
                "description": "Optional description of how this prerequisite relates"
              }
            },
            "additionalProperties": false,
            "description": "Reference to a prerequisite use case"
          }
        ]
      }
    },
    "postconditions": {
      "type": "array",
      "description": "Conditions that must be true after successful execution",
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      }
    },
    "mainFlow": {
      "type": "array",
      "description": "Main success scenario steps",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["step", "description"],
        "properties": {
          "step": {
            "type": "integer",
            "description": "Step number",
            "minimum": 1
          },
          "description": {
            "type": "string",
            "description": "Step description",
            "minLength": 1,
            "maxLength": 500
          },
          "actor": {
            "type": "string",
            "description": "Who performs this step (System or Actor)"
          }
        }
      }
    },
    "alternativeFlows": {
      "type": "array",
      "description": "Alternative paths",
      "items": {
        "type": "object",
        "required": ["id", "description", "steps"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Alternative flow identifier",
            "pattern": "^AF-[0-9]+$"
          },
          "description": {
            "type": "string",
            "description": "Description of when this flow occurs",
            "maxLength": 500
          },
          "branchFrom": {
            "type": "integer",
            "description": "Main flow step where this branches",
            "minimum": 1
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["step", "description"],
              "properties": {
                "step": {
                  "type": "integer",
                  "minimum": 1
                },
                "description": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 500
                }
              }
            }
          },
          "returnTo": {
            "type": "integer",
            "description": "Main flow step to return to (or 'end')"
          }
        }
      }
    },
    "exceptionFlows": {
      "type": "array",
      "description": "Exception handling flows",
      "items": {
        "type": "object",
        "required": ["id", "description", "steps"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Exception flow identifier",
            "pattern": "^EF-[0-9]+$"
          },
          "description": {
            "type": "string",
            "description": "Exception condition",
            "maxLength": 500
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["step", "description"],
              "properties": {
                "step": {
                  "type": "integer",
                  "minimum": 1
                },
                "description": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 500
                }
              }
            }
          }
        }
      }
    },
    "relatedRequirements": {
      "type": "array",
      "description": "Requirements this use case addresses",
      "items": {
        "type": "string",
        "pattern": "^(FR|NFR)-[A-Z0-9-]+(-[0-9]{2})?$"
      },
      "uniqueItems": true
    },
    "priority": {
      "type": "string",
      "description": "Implementation priority",
      "enum": ["critical", "high", "medium", "low"]
    },
    "frequency": {
      "type": "string",
      "description": "Expected frequency of execution",
      "enum": ["very-high", "high", "medium", "low", "very-low"]
    }
  }
}
