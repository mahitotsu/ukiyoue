{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ukiyoue.dev/schemas/types/business-requirements.schema.json",
  "title": "Business Requirements Document Schema",
  "description": "Schema for business requirements documentation including stakeholders, use cases, and functional/non-functional requirements",
  "allOf": [
    {
      "$ref": "https://ukiyoue.dev/schemas/document-base.schema.json"
    },
    {
      "type": "object",
      "required": ["projectOverview", "stakeholders", "functionalRequirements"],
      "properties": {
        "projectOverview": {
          "type": "object",
          "description": "High-level project information",
          "required": ["background", "objectives", "scope"],
          "properties": {
            "background": {
              "type": "string",
              "description": "Project background and context",
              "minLength": 1,
              "maxLength": 5000
            },
            "objectives": {
              "type": "array",
              "description": "Project objectives",
              "minItems": 1,
              "items": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            "scope": {
              "type": "object",
              "required": ["included", "excluded"],
              "properties": {
                "included": {
                  "type": "array",
                  "description": "What is included in the project scope",
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500
                  }
                },
                "excluded": {
                  "type": "array",
                  "description": "What is explicitly excluded from scope",
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500
                  }
                }
              }
            },
            "constraints": {
              "type": "object",
              "description": "Project constraints",
              "properties": {
                "technical": {
                  "type": "array",
                  "description": "Technical constraints",
                  "items": {
                    "type": "string",
                    "maxLength": 500
                  }
                },
                "business": {
                  "type": "array",
                  "description": "Business constraints",
                  "items": {
                    "type": "string",
                    "maxLength": 500
                  }
                },
                "legal": {
                  "type": "array",
                  "description": "Legal and regulatory constraints",
                  "items": {
                    "type": "string",
                    "maxLength": 500
                  }
                }
              }
            },
            "successMetrics": {
              "type": "array",
              "description": "Key Performance Indicators (KPIs)",
              "items": {
                "type": "object",
                "required": ["name", "target"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Metric name",
                    "maxLength": 100
                  },
                  "target": {
                    "type": "string",
                    "description": "Target value",
                    "maxLength": 200
                  },
                  "category": {
                    "type": "string",
                    "description": "Metric category",
                    "enum": ["business", "operational", "development", "user-satisfaction"]
                  }
                }
              }
            }
          }
        },
        "stakeholders": {
          "description": "Project stakeholders (array or $IMPORT reference)",
          "oneOf": [
            {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "https://ukiyoue.dev/schemas/components/stakeholder.schema.json"
              }
            },
            {
              "type": "string",
              "pattern": "^\\$IMPORT\\(.+\\.json\\)$",
              "description": "Reference to external file using $IMPORT(filename.json) syntax"
            }
          ]
        },
        "useCases": {
          "description": "Use case definitions (array or $IMPORT reference)",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "https://ukiyoue.dev/schemas/components/use-case.schema.json"
              }
            },
            {
              "type": "string",
              "pattern": "^\\$IMPORT\\(.+\\.json\\)$",
              "description": "Reference to external file using $IMPORT(filename.json) syntax"
            }
          ]
        },
        "functionalRequirements": {
          "description": "Functional requirements (array or $IMPORT reference)",
          "oneOf": [
            {
              "type": "array",
              "minItems": 1,
              "items": {
                "allOf": [
                  {
                    "$ref": "https://ukiyoue.dev/schemas/components/requirement.schema.json"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "functional"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "string",
              "pattern": "^\\$IMPORT\\(.+\\.json\\)$",
              "description": "Reference to external file using $IMPORT(filename.json) syntax"
            }
          ]
        },
        "nonFunctionalRequirements": {
          "description": "Non-functional requirements (array or $IMPORT reference)",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "https://ukiyoue.dev/schemas/components/requirement.schema.json"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "non-functional"
                      },
                      "subcategory": {
                        "type": "string",
                        "description": "NFR subcategory",
                        "enum": [
                          "performance",
                          "availability",
                          "security",
                          "usability",
                          "maintainability",
                          "scalability",
                          "reliability",
                          "compatibility"
                        ]
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "string",
              "pattern": "^\\$IMPORT\\(.+\\.json\\)$",
              "description": "Reference to external file using $IMPORT(filename.json) syntax"
            }
          ]
        },
        "glossary": {
          "type": "array",
          "description": "Project-specific terminology",
          "items": {
            "type": "object",
            "required": ["term", "definition"],
            "properties": {
              "term": {
                "type": "string",
                "description": "Technical term or jargon",
                "minLength": 1,
                "maxLength": 100
              },
              "definition": {
                "type": "string",
                "description": "Clear definition of the term",
                "minLength": 1,
                "maxLength": 1000
              },
              "aliases": {
                "type": "array",
                "description": "Alternative names for the same concept",
                "items": {
                  "type": "string",
                  "maxLength": 100
                },
                "uniqueItems": true
              },
              "relatedTerms": {
                "type": "array",
                "description": "Related terminology",
                "items": {
                  "type": "string",
                  "maxLength": 100
                }
              }
            }
          }
        },
        "assumptions": {
          "type": "array",
          "description": "Project assumptions",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          }
        },
        "risks": {
          "type": "array",
          "description": "Identified risks",
          "items": {
            "type": "object",
            "required": ["id", "description", "probability", "impact"],
            "properties": {
              "id": {
                "type": "string",
                "description": "Risk identifier",
                "pattern": "^RISK-[0-9]+$"
              },
              "description": {
                "type": "string",
                "description": "Risk description",
                "maxLength": 500
              },
              "probability": {
                "type": "string",
                "description": "Likelihood of occurrence",
                "enum": ["very-high", "high", "medium", "low", "very-low"]
              },
              "impact": {
                "type": "string",
                "description": "Impact if risk occurs",
                "enum": ["critical", "high", "medium", "low"]
              },
              "mitigation": {
                "type": "string",
                "description": "Mitigation strategy",
                "maxLength": 1000
              }
            }
          }
        }
      }
    }
  ]
}
