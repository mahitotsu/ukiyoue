{
  "$schema": "https://ukiyoue.example.org/schemas/layer2/data-dictionary.json",
  "@context": [
    "https://ukiyoue.example.org/context/base.jsonld",
    "https://ukiyoue.example.org/context/data-dictionary.jsonld"
  ],
  "@type": "DataDictionary",
  "id": "dd-tos-001",
  "version": "1.1.0",
  "status": "draft",
  "metadata": {
    "createdBy": "System Architect",
    "documentOwner": "Data Architecture Team",
    "classification": "internal"
  },
  "title": "Table Order System - Data Dictionary",
  "description": "Comprehensive data dictionary defining business and technical terms used across the Table Order System. Provides canonical definitions, data types, constraints, and cross-domain mappings.",
  "scope": "Defines all data entities, attributes, and their semantics for the Table Order System, covering business concepts (Order, Menu, Customer, Table) and technical implementations (Order ID, Table Number).",
  "traceability": {
    "derivedFrom": [],
    "satisfies": [],
    "relatedDocuments": ["pc-tos-001"]
  },
  "terms": [
    {
      "id": "term-order-001",
      "term": "Order",
      "canonicalName": "Order",
      "definition": "A customer's request for food and beverages from the menu, submitted through the tablet interface and sent to the kitchen for preparation.",
      "synonyms": ["注文", "オーダー", "Customer Order"],
      "domain": "business",
      "layer": "conceptual",
      "dataType": "object",
      "businessContext": "Core business entity representing a dining transaction. Each order is associated with exactly one table and contains one or more menu items.",
      "technicalContext": "Root aggregate in domain-driven design. Manages order lifecycle from creation to completion.",
      "constraints": {
        "required": true,
        "unique": false
      },
      "relatedTerms": ["term-menu-item-001", "term-table-001", "term-customer-001"],
      "examples": [
        "Order #42: Table 5, 2x Margherita Pizza, 1x Caesar Salad",
        "Order #43: Table 3, 1x Pasta Carbonara, 2x Tiramisu"
      ],
      "tags": ["core-entity", "transactional"],
      "deprecated": false
    },
    {
      "id": "term-order-id-001",
      "term": "Order ID",
      "canonicalName": "OrderId",
      "definition": "Unique identifier for an order, automatically generated by the system. Used to track orders from submission to kitchen to completion.",
      "synonyms": ["Order Number", "注文番号", "オーダーID"],
      "domain": "system",
      "layer": "logical",
      "dataType": "string",
      "businessContext": "Allows staff and customers to reference specific orders unambiguously.",
      "technicalContext": "Primary key in Order entity. Format: 'order-YYYYMMDD-NNNN' (e.g., order-20240115-0042).",
      "constraints": {
        "required": true,
        "unique": true,
        "pattern": "^order-\\d{8}-\\d{4}$",
        "minLength": 19,
        "maxLength": 19
      },
      "relatedTerms": ["term-order-001"],
      "examples": ["order-20240115-0042", "order-20240115-0043"],
      "tags": ["identifier", "system-generated"],
      "deprecated": false
    },
    {
      "id": "term-menu-001",
      "term": "Menu",
      "canonicalName": "Menu",
      "definition": "Collection of food and beverage items available for ordering, organized by categories (appetizers, main courses, desserts, drinks).",
      "synonyms": ["メニュー", "Menu List"],
      "domain": "business",
      "layer": "conceptual",
      "dataType": "object",
      "businessContext": "Defines what customers can order. Updated periodically by restaurant management.",
      "technicalContext": "Reference data managed by admin interface. Cached on tablets for quick browsing.",
      "constraints": {
        "required": true,
        "unique": false
      },
      "relatedTerms": ["term-menu-item-001"],
      "examples": [
        "Lunch Menu: 15 items across 4 categories",
        "Dinner Menu: 25 items across 6 categories"
      ],
      "tags": ["reference-data", "static"],
      "deprecated": false
    },
    {
      "id": "term-menu-item-001",
      "term": "Menu Item",
      "canonicalName": "MenuItem",
      "definition": "Individual food or beverage item available for ordering, with name, description, price, and category.",
      "synonyms": ["Dish", "料理", "メニューアイテム"],
      "domain": "business",
      "layer": "conceptual",
      "dataType": "object",
      "businessContext": "Represents what customers can add to their orders. Includes pricing and basic information.",
      "technicalContext": "Entity within Menu aggregate. Contains item details for display and ordering.",
      "constraints": {
        "required": true,
        "unique": false
      },
      "relatedTerms": ["term-menu-001", "term-order-001"],
      "examples": [
        "Margherita Pizza: Classic tomato, mozzarella, basil - $12.99",
        "Caesar Salad: Romaine lettuce, parmesan, croutons - $8.99"
      ],
      "tags": ["reference-data"],
      "deprecated": false
    },
    {
      "id": "term-customer-001",
      "term": "Customer",
      "canonicalName": "Customer",
      "definition": "Person or group dining at the restaurant, identified by the table they occupy during their visit.",
      "synonyms": ["Guest", "顧客", "お客様", "Diner"],
      "domain": "business",
      "layer": "conceptual",
      "dataType": "object",
      "businessContext": "Represents the person or party placing orders. In this system, customers are implicitly identified by their table number.",
      "technicalContext": "Implicit entity - not stored separately. Customer identity is inferred from table assignment.",
      "constraints": {
        "required": false,
        "unique": false
      },
      "relatedTerms": ["term-table-001", "term-order-001"],
      "examples": ["Party of 4 at Table 5", "Solo diner at Table 12"],
      "tags": ["implicit-entity", "out-of-scope-crm"],
      "deprecated": false
    },
    {
      "id": "term-table-001",
      "term": "Table",
      "canonicalName": "Table",
      "definition": "Physical dining table in the restaurant, identified by a unique table number. Equipped with a tablet for order placement.",
      "synonyms": ["Dining Table", "テーブル", "席"],
      "domain": "business",
      "layer": "conceptual",
      "dataType": "object",
      "businessContext": "Represents seating location. Used to route orders to correct customers and kitchen staff.",
      "technicalContext": "Reference entity. Each table has associated tablet device and order history.",
      "constraints": {
        "required": true,
        "unique": true
      },
      "relatedTerms": ["term-table-number-001", "term-order-001"],
      "examples": ["Table 5: 4-person table near window", "Table 12: 2-person table in corner"],
      "tags": ["reference-data", "physical-entity"],
      "deprecated": false
    },
    {
      "id": "term-table-number-001",
      "term": "Table Number",
      "canonicalName": "TableNumber",
      "definition": "Unique numeric identifier for a table in the restaurant, displayed on table signage and tablet interface.",
      "synonyms": ["Table ID", "テーブル番号", "席番号"],
      "domain": "system",
      "layer": "logical",
      "dataType": "integer",
      "businessContext": "Allows staff and system to identify which table placed an order.",
      "technicalContext": "Primary key for Table entity. Positive integer typically ranging from 1-50 depending on restaurant size.",
      "constraints": {
        "required": true,
        "unique": true,
        "minimum": 1,
        "maximum": 999
      },
      "relatedTerms": ["term-table-001"],
      "examples": ["5", "12", "23"],
      "tags": ["identifier", "business-key"],
      "deprecated": false
    },
    {
      "id": "term-order-status-001",
      "term": "Order Status",
      "canonicalName": "OrderStatus",
      "definition": "Current state of an order in its lifecycle, from submission to completion.",
      "synonyms": ["Status", "注文ステータス", "Order State"],
      "domain": "system",
      "layer": "logical",
      "dataType": "string",
      "businessContext": "Communicates order progress to customers and kitchen staff. Enables tracking and workflow management.",
      "technicalContext": "Enumeration with fixed values: pending, preparing, ready, delivered. State transitions enforced by business logic.",
      "constraints": {
        "required": true,
        "unique": false,
        "enum": ["pending", "preparing", "ready", "delivered"]
      },
      "relatedTerms": ["term-order-001"],
      "examples": [
        "pending: Order submitted, awaiting kitchen",
        "preparing: Kitchen actively cooking",
        "ready: Food prepared, awaiting pickup",
        "delivered: Order completed"
      ],
      "tags": ["enum", "workflow"],
      "deprecated": false
    },
    {
      "id": "term-guest-001",
      "term": "Guest",
      "canonicalName": "Guest",
      "definition": "DEPRECATED: Legacy term for customer. Use 'Customer' instead for consistency across documentation.",
      "synonyms": ["Visitor", "ゲスト"],
      "domain": "business",
      "layer": "conceptual",
      "dataType": "object",
      "businessContext": "Historical term used in early project phases. Replaced with 'Customer' to align with standard restaurant terminology.",
      "technicalContext": "Not used in current codebase. All references updated to 'Customer'.",
      "constraints": {
        "required": false,
        "unique": false
      },
      "relatedTerms": ["term-customer-001"],
      "examples": [],
      "tags": ["legacy", "deprecated"],
      "deprecated": true,
      "replacedBy": "term-customer-001"
    }
  ],
  "changeLog": [
    {
      "version": "1.1.0",
      "date": "2025-10-26",
      "changes": "Updated to ADR-009 compliant schema. Added data-dictionary.jsonld context for SKOS/DCAT/PROV integration. Added deprecated term 'Guest' with replacedBy reference to 'Customer'. Enhanced semantic interoperability for RDF export.",
      "author": "Data Architecture Team"
    },
    {
      "version": "1.0.0",
      "date": "2024-01-15",
      "changes": "Initial data dictionary creation. Defined 8 core terms covering business and system domains, conceptual and logical layers.",
      "author": "System Architect"
    }
  ]
}
