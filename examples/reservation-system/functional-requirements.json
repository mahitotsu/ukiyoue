[
  {
    "id": "FR-001",
    "title": "予約登録機能",
    "description": "顧客がユーザー登録なしでオンライン予約を登録できる機能。日時選択、サービスメニュー選択、顧客情報入力、予約確定、予約番号発行までの一連の流れを提供する。ユーザー登録やログインは不要で、予約ごとに顧客情報を入力する。",
    "type": "functional",
    "category": "予約管理",
    "priority": "critical",
    "status": "proposed",
    "rationale": "顧客が24時間いつでも手軽に予約できることがシステムの中核機能。ユーザー登録を不要とすることで、予約のハードルを下げ、顧客の利便性を最大化する。",
    "acceptanceCriteria": [
      "ユーザー登録・ログインなしで予約できること",
      "予約完了までの操作時間が3分以内であること",
      "入力エラーが即座に表示されること",
      "予約番号が即座に発行されること",
      "予約データがデータベースに正しく保存されること",
      "ダブルブッキングが発生しないこと"
    ],
    "dependencies": [],
    "relatedRequirements": ["FR-004", "NFR-001", "NFR-003"],
    "stakeholders": ["SH-CUSTOMER", "SH-STAFF"],
    "metrics": {
      "targetValue": "3分以内",
      "unit": "分"
    },
    "implementationNotes": "カレンダーUIライブラリの選定が必要。リアルタイムで空き状況を確認するため、Websocketまたはポーリングの検討が必要。トランザクション管理を徹底し、同時アクセス時のダブルブッキングを防止すること。",
    "testCases": ["TC-FR-001-01", "TC-FR-001-02", "TC-FR-001-03"],
    "estimatedEffort": {
      "value": 40,
      "unit": "hours"
    }
  },
  {
    "id": "FR-001-01",
    "title": "日時選択（カレンダーUIで空き状況表示）",
    "description": "顧客がカレンダーUIから予約希望日時を選択する。空き枠は選択可能、満席の枠は選択不可として視覚的に区別表示する。",
    "type": "functional",
    "category": "予約登録",
    "priority": "critical",
    "status": "proposed",
    "rationale": "空き状況を視覚的に確認できることで、顧客の利便性が向上し、予約完了率が高まる。",
    "acceptanceCriteria": [
      "カレンダーUIが表示されること",
      "空き枠と満席枠が視覚的に区別されていること",
      "選択した日時が確認画面に正しく反映されること",
      "過去の日時は選択できないこと"
    ],
    "dependencies": ["FR-004"],
    "relatedRequirements": ["NFR-001"],
    "stakeholders": ["SH-CUSTOMER"],
    "implementationNotes": "レスポンシブ対応のカレンダーライブラリを使用。モバイルでもタップしやすいUI設計が必要。",
    "estimatedEffort": {
      "value": 12,
      "unit": "hours"
    }
  },
  {
    "id": "FR-001-02",
    "title": "サービスメニュー選択（複数選択可）",
    "description": "顧客が利用したいサービスメニューを選択する。複数サービスの同時選択が可能で、所要時間が自動計算される。",
    "type": "functional",
    "category": "予約登録",
    "priority": "high",
    "status": "proposed",
    "rationale": "複数サービスの同時予約を可能にすることで、顧客の利便性が向上する。",
    "acceptanceCriteria": [
      "サービスメニュー一覧が表示されること",
      "複数サービスの選択が可能であること",
      "選択したサービスの合計所要時間が表示されること",
      "所要時間に応じて終了予定時刻が計算されること"
    ],
    "dependencies": ["FR-004"],
    "relatedRequirements": [],
    "stakeholders": ["SH-CUSTOMER"],
    "implementationNotes": "サービスマスタから所要時間を取得し、合計時間を計算する。",
    "estimatedEffort": {
      "value": 8,
      "unit": "hours"
    }
  },
  {
    "id": "FR-001-03",
    "title": "顧客情報入力",
    "description": "顧客が氏名、電話番号、メールアドレス、特記事項を入力する。必須項目と任意項目を明示し、入力形式を検証する。",
    "type": "functional",
    "category": "予約登録",
    "priority": "high",
    "status": "proposed",
    "rationale": "正確な顧客情報の収集は、予約管理と顧客対応に不可欠。",
    "acceptanceCriteria": [
      "氏名、電話番号、メールアドレスが必須項目として表示されること",
      "特記事項が任意項目として表示されること",
      "メールアドレスの形式が検証されること",
      "電話番号の形式が検証されること",
      "入力エラーが即座に表示されること"
    ],
    "dependencies": [],
    "relatedRequirements": ["NFR-003"],
    "stakeholders": ["SH-CUSTOMER", "SH-STAFF"],
    "implementationNotes": "クライアント側とサーバー側の両方でバリデーションを実施。個人情報は暗号化して保存。",
    "estimatedEffort": {
      "value": 10,
      "unit": "hours"
    }
  },
  {
    "id": "FR-001-04",
    "title": "入力内容の確認画面表示",
    "description": "予約確定前に、顧客が入力した全内容（日時、サービス、顧客情報）を一覧表示し、確認を促す。",
    "type": "functional",
    "category": "予約登録",
    "priority": "medium",
    "status": "proposed",
    "rationale": "確認画面を提供することで、入力ミスによる誤予約を防止できる。",
    "acceptanceCriteria": [
      "全入力内容が見やすく表示されること",
      "「戻る」ボタンで前画面に戻れること",
      "「確定」ボタンで予約が確定されること"
    ],
    "dependencies": ["FR-001-01", "FR-001-02", "FR-001-03"],
    "relatedRequirements": ["NFR-004"],
    "stakeholders": ["SH-CUSTOMER"],
    "implementationNotes": "モバイルでもスクロールなしで全内容が確認できるレイアウトにする。",
    "estimatedEffort": {
      "value": 5,
      "unit": "hours"
    }
  },
  {
    "id": "FR-001-05",
    "title": "予約確定処理",
    "description": "顧客が確定ボタンをクリックした際に、予約データをデータベースに保存し、予約枠を確保する。トランザクション管理により、ダブルブッキングを防止する。",
    "type": "functional",
    "category": "予約登録",
    "priority": "critical",
    "status": "proposed",
    "rationale": "予約の信頼性を確保するため、トランザクション管理は必須。",
    "acceptanceCriteria": [
      "予約データが正しくデータベースに保存されること",
      "同時アクセス時でもダブルブッキングが発生しないこと",
      "予約確定に失敗した場合はエラーメッセージが表示されること",
      "トランザクションがロールバックされること"
    ],
    "dependencies": ["FR-001-04"],
    "relatedRequirements": ["NFR-001", "NFR-002", "NFR-003"],
    "stakeholders": ["SH-CUSTOMER", "SH-STAFF"],
    "implementationNotes": "楽観的ロックまたは悲観的ロックを実装。同時アクセス時のロック競合を考慮したエラーハンドリングが必要。",
    "estimatedEffort": {
      "value": 15,
      "unit": "hours"
    }
  },
  {
    "id": "FR-001-06",
    "title": "予約番号の発行と表示",
    "description": "予約確定後、一意の予約番号を生成し、顧客に表示する。予約番号は予約の変更・キャンセル時の識別に使用される。",
    "type": "functional",
    "category": "予約登録",
    "priority": "high",
    "status": "proposed",
    "rationale": "予約番号は予約の識別と管理に不可欠。顧客が簡単に記録・参照できる形式が必要。",
    "acceptanceCriteria": [
      "予約番号が一意に生成されること",
      "予約番号が予約完了画面に表示されること",
      "予約番号が8-12桁の英数字であること",
      "予約番号がデータベースに保存されること"
    ],
    "dependencies": ["FR-001-05"],
    "relatedRequirements": ["FR-002"],
    "stakeholders": ["SH-CUSTOMER", "SH-STAFF"],
    "implementationNotes": "UUID、または日付+連番のハイブリッド形式を検討。読みやすさと一意性のバランスが重要。",
    "estimatedEffort": {
      "value": 5,
      "unit": "hours"
    }
  },
  {
    "id": "FR-002",
    "title": "予約変更・キャンセル機能",
    "description": "顧客が登録済み予約を変更またはキャンセルできる機能。予約番号を入力することで予約を特定し、その予約番号を持つ者に変更・キャンセルの権限を認可する。予約番号が認証トークンとして機能し、ログイン不要で操作可能。",
    "type": "functional",
    "category": "予約管理",
    "priority": "high",
    "status": "proposed",
    "rationale": "予約の変更・キャンセル機能は顧客の利便性向上に不可欠。予約番号による認可により、ログイン不要で安全に予約を管理できる。",
    "acceptanceCriteria": [
      "予約番号のみで予約を検索・認可できること",
      "予約番号が一致した場合のみ変更・キャンセルが可能であること",
      "予約内容を表示できること",
      "日時やサービスを変更できること",
      "予約をキャンセルできること",
      "変更・キャンセル期限を過ぎた予約は操作できないこと",
      "キャンセル期限内であればワンクリックでキャンセル可能であること",
      "変更完了後、即座に更新が反映されること"
    ],
    "dependencies": ["FR-001"],
    "relatedRequirements": ["NFR-001"],
    "stakeholders": ["SH-CUSTOMER", "SH-STAFF"],
    "metrics": {
      "targetValue": "即座に反映",
      "unit": "秒"
    },
    "implementationNotes": "変更・キャンセル期限は店舗側で設定可能にする。キャンセル時は予約枠を即座に解放し、他の顧客が予約できるようにする。",
    "testCases": ["TC-FR-002-01", "TC-FR-002-02", "TC-FR-002-03"],
    "estimatedEffort": {
      "value": 30,
      "unit": "hours"
    }
  },
  {
    "id": "FR-002-01",
    "title": "予約確認（予約番号で検索・認可）",
    "description": "顧客が予約番号を入力して、既存の予約を検索・表示する。予約番号の入力により、その予約の変更・キャンセル権限が認可される。予約番号が認証トークンとして機能する。",
    "type": "functional",
    "category": "予約変更・キャンセル",
    "priority": "high",
    "status": "proposed",
    "rationale": "予約番号による認可は、ログイン不要で安全に予約を管理できる。予約番号を知る者のみが操作可能であり、プライバシー保護にも優れる。",
    "acceptanceCriteria": [
      "予約番号入力フィールドが表示されること",
      "入力された予約番号で予約を検索できること",
      "予約が見つかった場合、予約内容を表示すること",
      "予約番号が一致した場合のみ、変更・キャンセルボタンが有効になること",
      "予約が見つからない場合、エラーメッセージを表示すること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-CUSTOMER"],
    "implementationNotes": "予約番号の入力形式をバリデーション。検索APIは適切なインデックスを使用して高速化。",
    "estimatedEffort": {
      "value": 8,
      "unit": "hours"
    }
  },
  {
    "id": "FR-002-02",
    "title": "予約内容表示",
    "description": "検索された予約の詳細情報（日時、サービス、顧客情報、ステータス）を表示する。",
    "type": "functional",
    "category": "予約変更・キャンセル",
    "priority": "medium",
    "status": "proposed",
    "rationale": "顧客が現在の予約内容を確認してから変更・キャンセルを判断できるようにする。",
    "acceptanceCriteria": [
      "予約日時が表示されること",
      "サービス内容が表示されること",
      "顧客情報が表示されること",
      "予約ステータスが表示されること",
      "「変更」「キャンセル」ボタンが表示されること"
    ],
    "dependencies": ["FR-002-01"],
    "relatedRequirements": ["NFR-004"],
    "stakeholders": ["SH-CUSTOMER"],
    "implementationNotes": "モバイル表示に最適化したレイアウト。",
    "estimatedEffort": {
      "value": 5,
      "unit": "hours"
    }
  },
  {
    "id": "FR-002-03",
    "title": "日時変更（新しい空き枠から選択）",
    "description": "顧客が予約の日時を変更する。新しい日時をカレンダーUIから選択し、空き状況を確認して変更を確定する。",
    "type": "functional",
    "category": "予約変更・キャンセル",
    "priority": "high",
    "status": "proposed",
    "rationale": "日時変更は顧客のニーズに柔軟に対応するために必要。",
    "acceptanceCriteria": [
      "カレンダーUIが表示されること",
      "新しい日時を選択できること",
      "空き状況が確認できること",
      "変更内容が確認画面に表示されること",
      "確定後、予約データが更新されること",
      "元の予約枠が解放されること"
    ],
    "dependencies": ["FR-002-02", "FR-004"],
    "relatedRequirements": ["NFR-001"],
    "stakeholders": ["SH-CUSTOMER"],
    "implementationNotes": "トランザクション管理により、元の枠の解放と新しい枠の確保を原子的に実行。",
    "estimatedEffort": {
      "value": 12,
      "unit": "hours"
    }
  },
  {
    "id": "FR-002-04",
    "title": "キャンセル処理",
    "description": "顧客が予約をキャンセルする。キャンセル確認後、予約ステータスをキャンセルに更新し、予約枠を解放する。",
    "type": "functional",
    "category": "予約変更・キャンセル",
    "priority": "high",
    "status": "proposed",
    "rationale": "キャンセル機能により、顧客は柔軟に予約を管理できる。",
    "acceptanceCriteria": [
      "キャンセル確認ダイアログが表示されること",
      "確定後、予約ステータスが「キャンセル」に更新されること",
      "予約枠が即座に解放されること",
      "キャンセル期限を過ぎた予約はキャンセルできないこと"
    ],
    "dependencies": ["FR-002-02"],
    "relatedRequirements": [],
    "stakeholders": ["SH-CUSTOMER", "SH-STAFF"],
    "implementationNotes": "キャンセル期限は店舗設定に基づく。キャンセル履歴はログとして保存。",
    "estimatedEffort": {
      "value": 8,
      "unit": "hours"
    }
  },
  {
    "id": "FR-002-05",
    "title": "変更・キャンセル完了画面表示",
    "description": "予約の変更またはキャンセルが完了したことを顧客に通知する画面を表示する。",
    "type": "functional",
    "category": "予約変更・キャンセル",
    "priority": "medium",
    "status": "proposed",
    "rationale": "完了画面により、顧客は操作が正常に完了したことを確認できる。",
    "acceptanceCriteria": [
      "変更完了メッセージが表示されること",
      "キャンセル完了メッセージが表示されること",
      "更新後の予約内容が表示されること（変更の場合）"
    ],
    "dependencies": ["FR-002-03", "FR-002-04"],
    "relatedRequirements": ["NFR-004"],
    "stakeholders": ["SH-CUSTOMER"],
    "implementationNotes": "明確で分かりやすいメッセージ表示。",
    "testCases": []
  },
  {
    "id": "FR-002-06",
    "title": "スタッフログイン機能",
    "description": "店舗スタッフが管理画面にアクセスするための認証機能。事前に登録されたユーザーID（メールアドレス）とパスワードを使用してログインする。認証成功後、セッションを確立し、管理機能へのアクセスを認可する。",
    "type": "functional",
    "category": "認証・認可",
    "priority": "critical",
    "status": "proposed",
    "rationale": "スタッフ用の管理機能は店舗の運営に重要な情報を含むため、適切な認証・認可が必須。不正アクセスを防止し、セキュリティを確保する。",
    "acceptanceCriteria": [
      "ログイン画面が表示されること",
      "メールアドレスとパスワードでログインできること",
      "認証に成功した場合、管理画面にリダイレクトされること",
      "認証に失敗した場合、エラーメッセージが表示されること",
      "セッションが確立され、ログイン状態が維持されること",
      "ログアウト機能が提供されること",
      "パスワードはハッシュ化されて保存されること（bcrypt等）",
      "セッションタイムアウトが30分であること"
    ],
    "dependencies": [],
    "relatedRequirements": ["FR-003", "FR-004", "FR-005", "NFR-003"],
    "stakeholders": ["SH-STAFF", "SH-MANAGER", "SH-SYSADMIN"],
    "implementationNotes": "認証にはJWT（JSON Web Token）またはセッションベース認証を使用。パスワードはbcryptでハッシュ化。CSRF対策、XSS対策を実装。HTTPSによる通信の暗号化が必須。",
    "testCases": ["TC-FR-002-06-01", "TC-FR-002-06-02"]
  },
  {
    "id": "FR-003",
    "title": "予約一覧表示機能（店舗側）",
    "description": "店舗スタッフが予約状況を一覧表示できる機能。日別・週別表示、ステータス別フィルタ、顧客名検索、予約詳細表示を提供する。この機能へのアクセスにはスタッフログインによる認証が必要。",
    "type": "functional",
    "category": "予約管理",
    "priority": "high",
    "status": "proposed",
    "rationale": "店舗スタッフが予約状況を効率的に確認・管理するために必須の機能。認証されたスタッフのみがアクセス可能。",
    "acceptanceCriteria": [
      "ログイン済みのスタッフのみがアクセスできること",
      "日別予約一覧を表示できること",
      "週間予約一覧を表示できること",
      "予約ステータス別（確定、キャンセル、完了）にフィルタできること",
      "顧客名で検索できること",
      "予約詳細を表示できること",
      "一覧表示が1秒以内に完了すること",
      "当日予約が色分けされて表示されること"
    ],
    "dependencies": ["FR-002-06"],
    "relatedRequirements": ["NFR-001", "NFR-004"],
    "stakeholders": ["SH-STAFF", "SH-MANAGER"],
    "metrics": {
      "targetValue": "1秒以内",
      "unit": "秒"
    },
    "implementationNotes": "データベースクエリの最適化が必要。インデックスを適切に設定し、ページネーションを実装。リアルタイム更新はWebsocketまたはポーリングで実現。",
    "testCases": ["TC-FR-003-01", "TC-FR-003-02", "TC-FR-003-03"],
    "estimatedEffort": {
      "value": 35,
      "unit": "hours"
    }
  },
  {
    "id": "FR-003-01",
    "title": "日別予約一覧表示",
    "description": "指定した日付の予約を時系列で一覧表示する。",
    "type": "functional",
    "category": "予約一覧表示",
    "priority": "high",
    "status": "proposed",
    "rationale": "当日の予約を時系列で確認することで、効率的な店舗運営が可能。",
    "acceptanceCriteria": [
      "指定日付の予約が時系列で表示されること",
      "予約時間、サービス、顧客名、ステータスが表示されること",
      "デフォルトで当日が選択されていること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-STAFF"],
    "implementationNotes": "タイムライン形式のUIが望ましい。",
    "estimatedEffort": {
      "value": 10,
      "unit": "hours"
    }
  },
  {
    "id": "FR-003-02",
    "title": "週間予約一覧表示",
    "description": "指定した週の予約を曜日ごとに一覧表示する。",
    "type": "functional",
    "category": "予約一覧表示",
    "priority": "medium",
    "status": "proposed",
    "rationale": "週単位での予約状況確認により、中期的な計画が可能。",
    "acceptanceCriteria": [
      "1週間分の予約が曜日ごとに表示されること",
      "各日の予約件数が一目で分かること",
      "週の切り替えが容易であること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-STAFF", "SH-MANAGER"],
    "implementationNotes": "カレンダー形式またはテーブル形式のUIを検討。",
    "estimatedEffort": {
      "value": 10,
      "unit": "hours"
    }
  },
  {
    "id": "FR-003-03",
    "title": "予約ステータス別フィルタ",
    "description": "予約ステータス（確定、キャンセル、完了、ノーショー）でフィルタリングして表示する。",
    "type": "functional",
    "category": "予約一覧表示",
    "priority": "medium",
    "status": "proposed",
    "rationale": "特定ステータスの予約のみを表示することで、効率的な予約管理が可能。",
    "acceptanceCriteria": [
      "ステータス選択UIが提供されること",
      "選択したステータスの予約のみが表示されること",
      "複数ステータスの同時選択が可能であること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-STAFF"],
    "implementationNotes": "チェックボックスまたはドロップダウンでステータスを選択。",
    "estimatedEffort": {
      "value": 6,
      "unit": "hours"
    }
  },
  {
    "id": "FR-003-04",
    "title": "顧客名での検索",
    "description": "顧客名を入力して予約を検索する。部分一致検索をサポートする。",
    "type": "functional",
    "category": "予約一覧表示",
    "priority": "medium",
    "status": "proposed",
    "rationale": "特定顧客の予約を素早く見つけるために必要。",
    "acceptanceCriteria": [
      "顧客名入力フィールドが提供されること",
      "部分一致で検索できること",
      "検索結果が即座に表示されること"
    ],
    "dependencies": [],
    "relatedRequirements": ["NFR-001"],
    "stakeholders": ["SH-STAFF"],
    "implementationNotes": "データベースのLIKE検索またはフルテキスト検索を使用。インデックスで高速化。",
    "estimatedEffort": {
      "value": 5,
      "unit": "hours"
    }
  },
  {
    "id": "FR-003-05",
    "title": "予約詳細の表示",
    "description": "一覧から予約を選択すると、詳細情報（予約番号、日時、サービス、顧客情報、特記事項、ステータス）を表示する。",
    "type": "functional",
    "category": "予約一覧表示",
    "priority": "high",
    "status": "proposed",
    "rationale": "詳細情報の確認は顧客対応に必要。",
    "acceptanceCriteria": [
      "予約番号が表示されること",
      "日時、サービス、顧客情報が表示されること",
      "特記事項が表示されること",
      "ステータスが表示されること",
      "ステータス変更ボタンが表示されること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-STAFF"],
    "implementationNotes": "モーダルまたはサイドパネルで詳細を表示。",
    "estimatedEffort": {
      "value": 8,
      "unit": "hours"
    }
  },
  {
    "id": "FR-004",
    "title": "予約枠設定機能",
    "description": "店舗管理者が予約可能な日時とサービスを設定できる機能。営業日・休業日、営業時間、予約枠の時間間隔、サービスごとの所要時間、同時受付可能数を設定する。",
    "type": "functional",
    "category": "設定管理",
    "priority": "high",
    "status": "proposed",
    "rationale": "予約枠の柔軟な設定は、店舗運営の実態に合わせたシステム運用に不可欠。",
    "acceptanceCriteria": [
      "営業日・休業日を設定できること",
      "営業時間を設定できること",
      "予約枠の時間間隔を設定できること（15分、30分、1時間など）",
      "サービスごとの所要時間を設定できること",
      "同時受付可能数を設定できること",
      "設定変更が即座に予約画面に反映されること",
      "過去の予約に影響しないこと",
      "設定変更が5分以内に完了できること"
    ],
    "dependencies": [],
    "relatedRequirements": ["NFR-001"],
    "stakeholders": ["SH-MANAGER"],
    "metrics": {
      "targetValue": "5分以内",
      "unit": "分"
    },
    "implementationNotes": "設定変更時は予約枠を再生成。既存予約との整合性チェックが必要。UIは直感的で分かりやすいものにする。",
    "testCases": ["TC-FR-004-01", "TC-FR-004-02", "TC-FR-004-03"],
    "estimatedEffort": {
      "value": 45,
      "unit": "hours"
    }
  },
  {
    "id": "FR-004-01",
    "title": "営業日・休業日の設定",
    "description": "カレンダーUIで営業日と休業日を設定する。",
    "type": "functional",
    "category": "予約枠設定",
    "priority": "high",
    "status": "proposed",
    "rationale": "営業日の柔軟な設定により、店舗の実態に合わせた運用が可能。",
    "acceptanceCriteria": [
      "カレンダーUIで日付を選択できること",
      "営業日/休業日を切り替えられること",
      "定期的な休業日（毎週月曜など）を設定できること",
      "特定日の臨時休業を設定できること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "休業日には予約枠を生成しない。",
    "estimatedEffort": {
      "value": 12,
      "unit": "hours"
    }
  },
  {
    "id": "FR-004-02",
    "title": "営業時間の設定",
    "description": "営業開始時刻と終了時刻を設定する。曜日ごとに異なる営業時間を設定可能。",
    "type": "functional",
    "category": "予約枠設定",
    "priority": "high",
    "status": "proposed",
    "rationale": "曜日ごとの営業時間設定により、実態に即した運用が可能。",
    "acceptanceCriteria": [
      "営業開始時刻を設定できること",
      "営業終了時刻を設定できること",
      "曜日ごとに異なる時間を設定できること",
      "時刻は30分単位で設定できること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "曜日別設定のデータ構造を設計。",
    "estimatedEffort": {
      "value": 10,
      "unit": "hours"
    }
  },
  {
    "id": "FR-004-03",
    "title": "予約枠の時間間隔設定",
    "description": "予約枠の時間間隔（15分、30分、1時間など）を設定する。",
    "type": "functional",
    "category": "予約枠設定",
    "priority": "medium",
    "status": "proposed",
    "rationale": "サービス内容に応じた適切な時間間隔の設定が必要。",
    "acceptanceCriteria": [
      "時間間隔を選択できること（15分/30分/45分/1時間）",
      "設定に基づいて予約枠が生成されること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "時間間隔に基づいて予約可能時間のスロットを生成。",
    "estimatedEffort": {
      "value": 8,
      "unit": "hours"
    }
  },
  {
    "id": "FR-004-04",
    "title": "サービスごとの所要時間設定",
    "description": "各サービスの所要時間を設定する。複数サービス選択時の合計時間計算に使用される。",
    "type": "functional",
    "category": "予約枠設定",
    "priority": "medium",
    "status": "proposed",
    "rationale": "サービスごとの所要時間を管理することで、正確な予約枠管理が可能。",
    "acceptanceCriteria": [
      "サービス一覧が表示されること",
      "各サービスの所要時間を分単位で入力できること",
      "設定が保存されること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "サービスマスタテーブルで管理。",
    "estimatedEffort": {
      "value": 6,
      "unit": "hours"
    }
  },
  {
    "id": "FR-004-05",
    "title": "同時受付可能数の設定",
    "description": "同じ時間帯に受け付け可能な予約数を設定する。",
    "type": "functional",
    "category": "予約枠設定",
    "priority": "medium",
    "status": "proposed",
    "rationale": "店舗のキャパシティに応じた予約数制限が必要。",
    "acceptanceCriteria": [
      "同時受付可能数を数値で入力できること",
      "設定された数に達した時間帯は予約不可になること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "予約枠管理テーブルで現在の予約数をカウント。",
    "estimatedEffort": {
      "value": 9,
      "unit": "hours"
    }
  },
  {
    "id": "FR-005",
    "title": "レポート機能",
    "description": "予約実績の統計情報を表示する機能。期間別予約件数、サービス別利用状況、時間帯別予約状況、キャンセル率、CSV出力を提供する。",
    "type": "functional",
    "category": "レポート",
    "priority": "medium",
    "status": "proposed",
    "rationale": "予約データの分析により、経営判断や業務改善に活用できる。",
    "acceptanceCriteria": [
      "期間別予約件数を表示できること",
      "サービス別利用状況を表示できること",
      "時間帯別予約状況を表示できること",
      "キャンセル率を表示できること",
      "CSV形式で出力できること",
      "レポート生成が5秒以内に完了すること",
      "過去1年分のデータを参照できること"
    ],
    "dependencies": [],
    "relatedRequirements": ["NFR-001"],
    "stakeholders": ["SH-MANAGER", "SH-EXECUTIVE"],
    "metrics": {
      "targetValue": "5秒以内",
      "unit": "秒"
    },
    "implementationNotes": "集計処理はバックグラウンドで実行。キャッシュを活用して高速化。グラフ表示にはチャートライブラリを使用。",
    "testCases": ["TC-FR-005-01", "TC-FR-005-02"],
    "estimatedEffort": {
      "value": 40,
      "unit": "hours"
    }
  },
  {
    "id": "FR-005-01",
    "title": "期間別予約件数",
    "description": "指定期間（日別、週別、月別）の予約件数を集計して表示する。",
    "type": "functional",
    "category": "レポート",
    "priority": "medium",
    "status": "proposed",
    "rationale": "期間別の予約動向を把握することで、繁忙期の予測や対策が可能。",
    "acceptanceCriteria": [
      "期間を選択できること（日別/週別/月別）",
      "予約件数が集計されて表示されること",
      "グラフ形式で視覚化されること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "グラフは棒グラフまたは折れ線グラフで表示。",
    "estimatedEffort": {
      "value": 12,
      "unit": "hours"
    }
  },
  {
    "id": "FR-005-02",
    "title": "サービス別利用状況",
    "description": "各サービスの予約件数と利用率を集計して表示する。",
    "type": "functional",
    "category": "レポート",
    "priority": "medium",
    "status": "proposed",
    "rationale": "人気サービスの把握により、メニュー改善やマーケティング戦略に活用できる。",
    "acceptanceCriteria": [
      "サービスごとの予約件数が表示されること",
      "利用率（全体に占める割合）が表示されること",
      "円グラフで視覚化されること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "集計クエリを最適化。",
    "estimatedEffort": {
      "value": 10,
      "unit": "hours"
    }
  },
  {
    "id": "FR-005-03",
    "title": "時間帯別予約状況",
    "description": "時間帯ごとの予約件数を集計して表示する。",
    "type": "functional",
    "category": "レポート",
    "priority": "low",
    "status": "proposed",
    "rationale": "時間帯別の予約動向を把握することで、スタッフシフトの最適化が可能。",
    "acceptanceCriteria": [
      "時間帯ごとの予約件数が表示されること",
      "ヒートマップで視覚化されること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "1時間または2時間単位で集計。",
    "estimatedEffort": {
      "value": 8,
      "unit": "hours"
    }
  },
  {
    "id": "FR-005-04",
    "title": "キャンセル率",
    "description": "全予約に対するキャンセルの割合を計算して表示する。",
    "type": "functional",
    "category": "レポート",
    "priority": "low",
    "status": "proposed",
    "rationale": "キャンセル率の把握により、予約ポリシーの見直しや改善策の検討が可能。",
    "acceptanceCriteria": [
      "期間別のキャンセル率が表示されること",
      "目標値との比較が表示されること"
    ],
    "dependencies": [],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "キャンセル率 = キャンセル数 / 全予約数 × 100",
    "estimatedEffort": {
      "value": 6,
      "unit": "hours"
    }
  },
  {
    "id": "FR-005-05",
    "title": "CSV出力",
    "description": "レポートデータをCSV形式でダウンロードできる。",
    "type": "functional",
    "category": "レポート",
    "priority": "low",
    "status": "proposed",
    "rationale": "CSV出力により、Excelなどの外部ツールでの二次分析が可能。",
    "acceptanceCriteria": [
      "CSV出力ボタンが提供されること",
      "クリックするとCSVファイルがダウンロードされること",
      "文字コードはUTF-8（BOM付き）であること"
    ],
    "dependencies": ["FR-005-01", "FR-005-02", "FR-005-03", "FR-005-04"],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "Excel対応のためBOM付きUTF-8を使用。",
    "estimatedEffort": {
      "value": 5,
      "unit": "hours"
    }
  },
  {
    "id": "FR-006",
    "title": "来店確認（受付処理）機能",
    "description": "顧客が実際に店舗に来店した際に、店舗スタッフが予約情報を「来店済み」ステータスに更新する機能。予約番号または顧客名で検索し、ワンクリックで来店確認を完了できる。",
    "type": "functional",
    "category": "予約管理",
    "priority": "high",
    "status": "proposed",
    "rationale": "来店確認機能により、予約ステータスをリアルタイムで更新し、正確な予約管理と顧客サービスの向上を実現する。来店実績データは稼働状況の分析にも活用できる。",
    "acceptanceCriteria": [
      "予約番号または顧客名で予約を検索できること",
      "当日の予約一覧が表示されること",
      "ワンクリックで来店確認ができること",
      "来店確認時刻が自動記録されること",
      "受付を行ったスタッフ情報が記録されること",
      "来店確認後、予約ステータスが「来店済み」に更新されること",
      "来店確認済みの予約が一覧で識別できること",
      "操作完了が1秒以内であること"
    ],
    "dependencies": ["FR-003"],
    "relatedRequirements": ["NFR-001"],
    "useCaseIds": ["UC-008"],
    "stakeholders": ["SH-STAFF", "SH-MANAGER"],
    "metrics": {
      "targetValue": "1秒以内",
      "unit": "秒"
    },
    "implementationNotes": "来店確認はトランザクション処理で実行し、確実にステータス更新を行う。来店時刻はサーバータイムスタンプを使用。スタッフ情報はログインセッションから取得。誤操作を防ぐため、確認ダイアログは簡潔にする。",
    "testCases": ["TC-FR-006-01", "TC-FR-006-02", "TC-FR-006-03"],
    "estimatedEffort": {
      "value": 25,
      "unit": "hours"
    }
  },
  {
    "id": "FR-006-01",
    "title": "来店確認用予約検索",
    "description": "顧客名または予約番号で予約を検索し、当日の予約を素早く見つける。",
    "type": "functional",
    "category": "来店確認",
    "priority": "high",
    "status": "proposed",
    "rationale": "来店時の受付をスムーズに行うため、素早い検索機能が必要。",
    "acceptanceCriteria": [
      "検索フィールドが目立つ位置に配置されていること",
      "予約番号での検索が可能であること",
      "顧客名での部分一致検索が可能であること",
      "検索結果が即座に表示されること（500ms以内）",
      "当日の予約が優先的に表示されること"
    ],
    "dependencies": [],
    "relatedRequirements": ["FR-003-04"],
    "stakeholders": ["SH-STAFF"],
    "implementationNotes": "データベースインデックスを活用して高速検索を実現。オートコンプリート機能も検討。",
    "estimatedEffort": {
      "value": 8,
      "unit": "hours"
    }
  },
  {
    "id": "FR-006-02",
    "title": "来店確認ボタンとステータス更新",
    "description": "予約詳細画面に「来店確認」ボタンを表示し、クリックすることで予約ステータスを「来店済み」に更新する。",
    "type": "functional",
    "category": "来店確認",
    "priority": "critical",
    "status": "proposed",
    "rationale": "ワンクリックで来店確認を完了できることで、受付業務の効率化を実現。",
    "acceptanceCriteria": [
      "予約詳細画面に「来店確認」ボタンが表示されること",
      "ボタンが視認性の高いデザインであること",
      "クリック時に確認ダイアログが表示されること",
      "確定後、予約ステータスが「来店済み」に即座に更新されること",
      "更新後、完了メッセージが表示されること",
      "既に来店済みの予約にはボタンが無効化されていること"
    ],
    "dependencies": ["FR-006-01"],
    "relatedRequirements": ["NFR-004"],
    "stakeholders": ["SH-STAFF"],
    "implementationNotes": "ボタンは大きく、タップしやすいサイズにする。確認ダイアログは簡潔に（「〇〇様の来店を確認しますか？」）。",
    "estimatedEffort": {
      "value": 10,
      "unit": "hours"
    }
  },
  {
    "id": "FR-006-03",
    "title": "来店時刻とスタッフ情報の記録",
    "description": "来店確認を行った日時と、操作を行ったスタッフの情報を自動的に記録する。",
    "type": "functional",
    "category": "来店確認",
    "priority": "high",
    "status": "proposed",
    "rationale": "来店実績データの正確性を確保し、後の分析や問い合わせ対応に活用するため。",
    "acceptanceCriteria": [
      "来店確認時刻が自動記録されること（サーバータイムスタンプ）",
      "受付を行ったスタッフIDと名前が記録されること",
      "記録されたデータが予約詳細画面で確認できること",
      "記録されたデータがレポート機能で集計可能であること"
    ],
    "dependencies": ["FR-006-02"],
    "relatedRequirements": ["FR-005"],
    "stakeholders": ["SH-STAFF", "SH-MANAGER"],
    "implementationNotes": "タイムゾーンを考慮したタイムスタンプ記録。スタッフ情報はログインセッションから取得。",
    "estimatedEffort": {
      "value": 7,
      "unit": "hours"
    }
  },
  {
    "id": "FR-006-04",
    "title": "来店済み予約の視覚的識別",
    "description": "予約一覧画面で、来店済みの予約を色分けやアイコンで視覚的に識別できるようにする。",
    "type": "functional",
    "category": "来店確認",
    "priority": "medium",
    "status": "proposed",
    "rationale": "来店済みと未来店の予約を一目で区別できることで、店舗スタッフの業務効率が向上する。",
    "acceptanceCriteria": [
      "来店済み予約が他の予約と異なる色で表示されること",
      "来店済みアイコンが表示されること",
      "ステータスフィルタで来店済み/未来店を切り替えられること"
    ],
    "dependencies": ["FR-006-02", "FR-003"],
    "relatedRequirements": ["NFR-004"],
    "stakeholders": ["SH-STAFF"],
    "implementationNotes": "色覚異常者にも配慮した配色（緑系統＋チェックアイコン等）。",
    "estimatedEffort": {
      "value": 5,
      "unit": "hours"
    }
  },
  {
    "id": "FR-006-05",
    "title": "来店確認の取り消し機能",
    "description": "誤って来店確認を行った場合に、管理者権限で来店確認を取り消すことができる。",
    "type": "functional",
    "category": "来店確認",
    "priority": "low",
    "status": "proposed",
    "rationale": "誤操作に対するリカバリー機能を提供することで、データの正確性を維持する。",
    "acceptanceCriteria": [
      "管理者のみが来店確認取り消しボタンを表示できること",
      "取り消し時に理由を入力できること",
      "取り消し後、ステータスが元の状態に戻ること",
      "取り消し操作がログに記録されること"
    ],
    "dependencies": ["FR-006-02"],
    "relatedRequirements": [],
    "stakeholders": ["SH-MANAGER"],
    "implementationNotes": "権限管理機能が必要。取り消しログは監査証跡として保存。",
    "estimatedEffort": {
      "value": 8,
      "unit": "hours"
    }
  },
  {
    "id": "FR-007",
    "title": "スタッフアカウント管理機能",
    "description": "システム管理者が店舗スタッフのアカウントを作成・管理する機能。アカウントの登録、権限設定、有効化・無効化、削除を行う。",
    "type": "functional",
    "category": "アカウント管理",
    "priority": "critical",
    "status": "proposed",
    "rationale": "スタッフがシステムにログインするには、事前にアカウントが登録されている必要がある。また、退職時のアカウント無効化などのライフサイクル管理が必要。",
    "acceptanceCriteria": [
      "システム管理者がスタッフアカウントを作成できること",
      "メールアドレス、氏名、役割（スタッフ/管理者）を設定できること",
      "初期パスワードを設定または自動生成できること",
      "アカウントを有効化・無効化できること",
      "アカウント一覧を確認できること",
      "アカウント情報を編集できること"
    ],
    "dependencies": [],
    "relatedRequirements": ["FR-002-06", "NFR-003"],
    "stakeholders": ["SH-SYSADMIN", "SH-MANAGER"],
    "implementationNotes": "初期パスワードは強制的に変更させる。メールアドレスは一意制約。削除はソフトデリート推奨。"
  },
  {
    "id": "FR-007-01",
    "title": "スタッフアカウント登録",
    "description": "新規スタッフのアカウントを登録する。メールアドレス、氏名、役割、初期パスワードを設定する。",
    "type": "functional",
    "category": "アカウント管理",
    "priority": "critical",
    "status": "proposed",
    "rationale": "新規スタッフがシステムを利用開始するための必須機能。",
    "acceptanceCriteria": [
      "メールアドレス（必須、一意）を入力できること",
      "氏名（必須）を入力できること",
      "役割（スタッフ/管理者）を選択できること",
      "初期パスワードを設定または自動生成できること",
      "登録後、アカウントが有効状態になること",
      "メールアドレスの重複チェックが行われること"
    ],
    "dependencies": [],
    "relatedRequirements": ["FR-002-06"],
    "stakeholders": ["SH-SYSADMIN"],
    "implementationNotes": "メールアドレス形式バリデーション必須。初期パスワードは8文字以上で、初回ログイン時に変更を強制。"
  },
  {
    "id": "FR-007-02",
    "title": "スタッフアカウント一覧表示",
    "description": "登録されているスタッフアカウントの一覧を表示する。アカウント状態（有効/無効）、役割でフィルタリングできる。",
    "type": "functional",
    "category": "アカウント管理",
    "priority": "high",
    "status": "proposed",
    "rationale": "システム管理者がアカウントの状態を把握するための機能。",
    "acceptanceCriteria": [
      "全アカウントの一覧が表示されること",
      "メールアドレス、氏名、役割、状態が表示されること",
      "有効/無効でフィルタリングできること",
      "役割（スタッフ/管理者）でフィルタリングできること",
      "アカウント名で検索できること"
    ],
    "dependencies": ["FR-007-01"],
    "relatedRequirements": [],
    "stakeholders": ["SH-SYSADMIN"],
    "implementationNotes": "ページネーション推奨（50件/ページ程度）。"
  },
  {
    "id": "FR-007-03",
    "title": "スタッフアカウント編集",
    "description": "既存のスタッフアカウント情報を編集する。氏名、役割を変更できる。メールアドレスは変更不可。",
    "type": "functional",
    "category": "アカウント管理",
    "priority": "high",
    "status": "proposed",
    "rationale": "スタッフの役割変更や情報更新に対応するための機能。",
    "acceptanceCriteria": [
      "氏名を変更できること",
      "役割（スタッフ/管理者）を変更できること",
      "メールアドレスは変更できないこと（表示のみ）",
      "変更後、即座に反映されること"
    ],
    "dependencies": ["FR-007-01"],
    "relatedRequirements": [],
    "stakeholders": ["SH-SYSADMIN"],
    "implementationNotes": "メールアドレス変更が必要な場合は、アカウント無効化→新規登録を推奨。"
  },
  {
    "id": "FR-007-04",
    "title": "スタッフアカウント無効化",
    "description": "スタッフの退職や休職時に、アカウントを無効化する。無効化されたアカウントはログインできなくなる。",
    "type": "functional",
    "category": "アカウント管理",
    "priority": "critical",
    "status": "proposed",
    "rationale": "セキュリティ上、不要になったアカウントは速やかに無効化する必要がある。",
    "acceptanceCriteria": [
      "アカウントを無効化できること",
      "無効化後、該当アカウントでログインできないこと",
      "無効化されたアカウントは一覧で識別できること",
      "無効化理由を記録できること（任意）"
    ],
    "dependencies": ["FR-007-01"],
    "relatedRequirements": ["NFR-003"],
    "stakeholders": ["SH-SYSADMIN"],
    "implementationNotes": "ソフトデリート方式。過去のログや予約履歴は保持。"
  },
  {
    "id": "FR-007-05",
    "title": "スタッフアカウント再有効化",
    "description": "無効化されたアカウントを再度有効化する。復職時などに使用。",
    "type": "functional",
    "category": "アカウント管理",
    "priority": "medium",
    "status": "proposed",
    "rationale": "一時的な休職後の復帰や、誤って無効化した場合の復旧に対応。",
    "acceptanceCriteria": [
      "無効化されたアカウントを再有効化できること",
      "再有効化後、ログイン可能になること",
      "再有効化理由を記録できること（任意）"
    ],
    "dependencies": ["FR-007-04"],
    "relatedRequirements": [],
    "stakeholders": ["SH-SYSADMIN"],
    "implementationNotes": "パスワードリセットを推奨（セキュリティのため）。"
  },
  {
    "id": "FR-007-06",
    "title": "パスワードリセット機能",
    "description": "システム管理者がスタッフのパスワードを強制的にリセットする。スタッフがパスワードを忘れた場合やセキュリティ上の理由で使用。",
    "type": "functional",
    "category": "アカウント管理",
    "priority": "high",
    "status": "proposed",
    "rationale": "パスワード忘れやセキュリティインシデント時の対応として必要。",
    "acceptanceCriteria": [
      "システム管理者がパスワードをリセットできること",
      "新しい一時パスワードが自動生成されること",
      "次回ログイン時にパスワード変更が強制されること",
      "パスワードリセット操作がログに記録されること"
    ],
    "dependencies": ["FR-007-01"],
    "relatedRequirements": ["NFR-003"],
    "stakeholders": ["SH-SYSADMIN"],
    "implementationNotes": "一時パスワードは12文字以上のランダム文字列。メール通知は任意機能。"
  }
]
